<?xml version="1.0" encoding="utf-8" standalone="yes"?><search><entry><title>404 Not Found</title><url>/post/404/</url><categories/><tags/><content type="html"> 想不到吧，/post/404/ 居然是一个单独的页面！
你是怎么发现这个页面的呢？
是在 GitHub 上翻源码吗？还是自己改 url 改进来的？
抑或通过搜索功能？或是随机页面？
来评论回答一下吧！</content></entry><entry><title>Hello World</title><url>/post/hello-world/</url><categories><category>杂项</category></categories><tags><tag>杂项</tag></tags><content type="html"><![CDATA[  MathJax3 不支持行内公式，自闭了。
换用 MathJax2.7 后好多了。
Hello World！
你好！
When $a \ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are:
$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$
1Hello World！ 2 3你好！ 4 5When $a \ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are: 6 7$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$ 一二三四五六1 2 2.1 2.2 3 1#include &lt;stdio.h&gt; 2 3int main() 4{ 5 puts(&#34;Hello World!&#34;) 6 return 0; 7} （密码：123456）
  ]]></content></entry><entry><title>Music</title><url>/music.html</url><categories/><tags/><content type="html"> APlayer 加载 GitHub 上的乐曲和曲绘实在太卡了，所以特意迁移到单独一个页面。
因为 GitHub 加载音乐实在太卡也太占空间，所以改用了外链加载。
音乐来自网易云 Arcaea 电台，而曲绘来自中文维基。</content></entry><entry><title>关于我</title><url>/about.html</url><categories><category>杂项</category></categories><tags><tag>杂项</tag></tags><content type="html"> 你好。我是 myee。
我的高中就读于杭州学军中学教育集团文渊中学。现在（$2023$ 年下半年）高三。
我的 OI 获奖：
APIO2022 线上金牌。 WC2023 金牌。 NOI2023 金牌。 在使用 GitHub Pages 搭建博客前，我用过很长时间洛谷博客，也用过两年左右的 cnblogs（博客园）。
当初使用洛谷博客主要是为了方便（以及洛谷题解需要用博客提交），而后来使用 cnblogs 则是因其高度的自定义以及设置加密文章很令人舒适。
然而很不幸，cnblogs 运营困难，摇摇欲坠，有可能即将倒闭。因此我不得不防患于未然，搭建起这个博客。
该博客采用了 Hugo NexT 主题，故而非常美观。
由于我不是很会在 GitHub 上加密文章，所以我并不会轻易把所有文章传上来。
现在之前的文章都还在鸽，到时候会传的。</content></entry><entry><title>友情链接</title><url>/flinks.html</url><categories><category>杂项</category></categories><tags><tag>杂项</tag></tags><content type="html"> Rainbow_sjy 的 cnblogs 博客
cmll02 的 GitHub 博客
zhoukangyang 的 cnblogs 博客
dead_X 的 cnblogs 博客
RedreamMer 的 cnblogs 博客
Mophie 的 Luogu 博客
zaozao_zmx 的 cnblogs 博客
由于博客评论我还不会弄，如果有需要挂友链的同学可以联系我，我会视情况加入。
评论功能弄好了！有想挂友链的同学在下面发一下就好了，我会视情况加入。
国内用不太了 waline，我也不太会配，急了。有意愿的同学还是联系我吧。</content></entry><entry><title>NOI2023 游记</title><url>/post/NOI2023/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>图片挂了</tag></tags><content type="html"> Day $0$ 是 7.23，Day $1$ 是 7.24，Day $2$ 是 7.26。
Day $-6$
从华师一飞回杭州。
打 qoj 板子赛。
Day $-5$
模拟赛。
$44+32+0$。
T1 正解没调出来。破大防。
打 qoj 板子赛。
下午不小心撞电风扇上了，受伤了，比较寄。
Day $-4$
模拟赛。
$100+0+100$。
最后一个小时写了 T3 对拍。出题人不给大样例是这样的。
打 qoj 板子赛。
Day $-3$
模拟赛。XJOI。
$90+25+0$。
T1 被卡常了。
打 qoj 板子赛。
Day $-2$
模拟赛。XJOI。
$0+0+0$。
hhz 素质很高。
NOI 考前最后一场模拟赛搬三个题，前两题题意还能假的，第三题不可做。
喜提爆零。
打 qoj 板子赛。
Day $-1$
早上赶飞机，飞去成都。
$10:55\sim13:35$ 的飞机。CA4520。和绍一同一班。
抵达成都双流机场。
徐老师带路。成功带迷路了。
后来工作人员来了，但是徐老师不知道去哪了。于是我们等了很久。
大约 15:00 左右坐上大巴。
很快进了学校。签名墙上签名！
领物资，领到了胸牌、秩序册、两件 T 恤、一个 NOI 徽章等等。还有一大张餐券。
入住寝室。这个寝室看上去很不错啊！室友是 zak sjy dx。
领到了 $10$ 个我的徽章。自己留了一个，剩下的都拿去换了。
qyc 火大了，觉得我应该多订几个。/fendou
吃晚饭。食堂是自助取餐，很舒服！
背笔试。
打 qoj 板子赛。
晚上发了密码条。
Day $0$
背笔试。
上午开幕式。
前来的工作人员名单揭幕了。怎么有 EI？怎么有 EI？怎么有 EI？
畏惧了。
《红旗颂》把耳朵震聋了。哈人。
机器人表演之类的保留节目还在。
背笔试。
下午去试机。试机题目是 NOIp2021。奶一口今年没有交互题。
yyl 说下发了一个 selfEval，来给选手测样例，避免 MLE 之类的傻逼错误。测了下很好用。
笔试题目很轻松满分了。今年怎么又有碰键盘题和丢密码条扣分题啊！
NOIp 花了 1h 切了前 $3$ 题，测试了一下 selfEval 发现很好用。
打 qoj 板子赛。
晚上发了密码条。
Day $1$
半夜里惊醒，一看时间 $2:22$。
去考场前突然想上厕所，问了下工作人员给指了 …</content></entry><entry><title>THUPC2023 游记</title><url>/post/THUPC2023/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>图片挂了</tag></tags><content type="html"> 2023.2
THUPC 报名！
和 unputdownable，猫猬兽组队，队名 XJ 五队。
devin 让我们填毕业年份 2028。
收货地址填了 重庆市第114514中学冯阳阳纪念谷学校。
upd 性别填 其他 被拒了。
2023.3.4
THUPC 2023 初赛测试赛！
$3$ 月 $4$ 日 $13$ 点联络群消息：
1## OJ网址 2 3thupc2023.thusaac.com 4 5## 环境测试 (https://thupc2023.thusaac.com/contest/4/home) 6 7- 时间：2023/3/4 13:00 ~ 2023/3/5 10:00 8- 语言及编译选项与正式初赛相同 9- 所有参加环境测试的选手**共用**如下账号，因此您的提交能够被其他人看见 10 密码条： 11 username: thupc_test 12 password: ec76d8 13- 正式比赛使用的用户名和密码条将在报名截止（2023/3/5 10:30）后生成并通过报名网站 (https://signup.thupc2023.thusaac.com/)发放 然后发现公用号可以发提问！
1已解决 提问 THUPC测试 03-04 13:14:07 解决 THUPC测试 03-04 13:14:22 2我， 03-04 13:14:07： 3膜拜国际特级大师周康阳大佬 乐。
然后此时由于 NOI 春测刚结束，没管，去口胡了春测，感觉梦回普及组！不过被最后一道 Itst 题拉回现实了。
然后开摆。
大概下午 $3$ 点半左右开始做题。
题面下载
。
然后去提问区问了一句：
1我， 03-04 15:34:54： 2测试赛题解赛后会公开吗 回复是
1管理员， 03-04 16:54:54： 2这三道题是「CodePlus 8 × HWS第五期 - 决赛」复刻，已经帮您联系出题人，希望他们不鸽🙏 发现没人过 B，开题看了眼。
感觉是憨憨数位 dp，枚举取模后结果即做完。
然后开始写，第一次交 MLE 了（开了 map），第二次交 TLE 了（递归大常数），最后卡了卡常才过。
代码：
1// 膜拜国际特级大师周康阳大佬，今天在 THUPC 测试赛首页称您为大夏尊贵的大名，一股敬佩之油生然而，您在 THUPC 测试赛为国争光，扬我华威名，向您献上最 …</content></entry><entry><title>ZJOI2023 游记</title><url>/post/ZJOI2023/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>图片挂了</tag></tags><content type="html"><![CDATA[  正赛在 2023.4.1 - 2023.4.2。
愚人节省选。挨创。
前情提要：$\rm NOIP$ $\rm297pts$ 苟上 ZJ 队线。
其实前面一长串（Day $-25\sim-5$）是纪中集训游记，不过比较早的内容可能记不太起来了。
Day $-26$THUPC 初赛，打拉垮了。只过了 C。
Day $-25$飞去中山纪中集训。住的女生宿舍。
Day $-24$清澄模拟赛。hhz &amp;amp; lk Round。
打了 Rank $2$，上去介绍了 T1 的神秘做法。
T2 是什么 SAM 题，看不懂题，开摆。
Day $-23$清澄模拟赛。asdfz &amp;amp; zsjz Round。
垫大底，破大防。
Day $-22$清澄模拟赛。tyy &amp;amp; lh Round。
前两题 tyy 题，一开始的数据甚至只有样例。
用随机撒点树分块冲过去了 T1。
lh 出了神秘高精度题。于是联考风行九雷唱。
Day $-21$听 hsy xxy讲题。开摆。
Day $-20\sim-19$GDKOI，被打爆了！
游记可以自己去看。
Day $-18$清澄模拟赛。liqingyang Round。
给 T1 整了一个非常好写的 $O(kn^{1.34})$ 做法，其中 $k=10$。
Day $-17$清澄模拟赛。xcyle Round。
两道结论题 + 一道神秘高消题。自闭。
Day $-16$清澄模拟赛。zsjz Round。
T1 大分类讨论题没开，急了。
T2 神秘构造题，急了。
T3 赛时重造数据却没有重测，急了。
下午听 zxy讲题。开摆。
qsnkj来通知，ZJOI 改强制 Linux 了。开始用虚拟机。
Day $-15$听 bnds 讲题。开摆。
Day $-14$清澄模拟赛。asdfz Round。
切了 $2$ 题，拿了 Rank $6$。
T1 转化成求 $n$ 个低次有理分式之和的连续点值，随便写了个点值平移秒了。听说 std 写了多点求值，绷。不过也许有趣的地方应该在于乘 $e^z$ 来对 $f\leftarrow z(f&amp;rsquo;&amp;rsquo;+2f&amp;rsquo;+f)$ 进行变换的过程？
T2 转化后是大施罗德数（OEIS A006318），随便推了个 ODE 秒了。其实之前模拟赛里有过这种东西。 …  ]]></content></entry><entry><title>GDKOI2023 游记</title><url>/post/GDKOI2023/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>图片挂了</tag></tags><content type="html"> 因为在广东集训，我们都要参加 GDKOI2023 来试手。
正赛在 3.11，3.12 两天。
Day 0
上午是照常的讲题，感觉很有意思。
下午纪中教练给我们发了 GDKOI 2021 题面。
口胡到了 Day 2 的 T3，T4 还没胡。
Day 1
我是预言家！
三题四小时，$8:30\sim12:30$。
没有大样例，稍微大一点的样例也很小。
T1 一看，这不是憨憨题，码了个 modint。
T2 一看，推了个容斥，推出通项式，推出递推式，发现不会啥正经做法。分块 FFT 也没写，预估 $40\sim60$。
T3 一看，容斥 + 异或卷积 + 集合幂级数随便做，写了个 $O(n^23^n+2^n\log v)$ 的东西，光荣没过样例二，挂成 $10$ 分。
怎么三道 $998244353$ 的啊？alpha 快乐场。
听说 alpha $100 + 100 + 80$，zak $100 + 100 + 100$，感觉很厉害。
alpha T2 用 ODE 自动机理论爆标了，做到了根号甚至 $\log^2$。/bx
原来是 wxw 场啊，咋三道原啊。
然后听说 alpha T3 挂成 $20\rm pts$ 了。
T3 std 咋是 $O^*(4^n)$ 的啊。
LA 群内多头：
「待会大家都知道 wxw 搬自己作业到模拟赛里了」
「一定不能让大家知道 wxw 搬自己作业到模拟赛里了」
「你们不要再强调 wxw 搬自己作业到模拟赛里了啊」
听说 T1 2.7e8 读入，没用 fread 的都 gg 了。
晚上把 GDKOI 2021 口胡到了 Day 3 T3，最后一题没看。
Day 2
进场前听说 zak Day 1 $299\rm pts$。
神的怜悯.jpg。
开场一看，一个 ds，一个 $998244353$，一个 ds。
T1 一眼偏序，一个树剖，一个换根，一个扫描线，一个 BIT 拍上去就完了。
T2 没思路，推出了子集 dp，FMT 优化一下是 $O(nk2^n)$ 的，矩乘是 $O(8^n\log k)$，稍微卡卡常，大概是 $20\sim60$。
T3 感觉很 In a Trap
啊！感觉不会啥 polylog 做法，猛的一个根号分治 + 根号平衡冲上去，复杂度 $O((n+q)\sqrt n)$，也没拼暴力，预估 $20\sim100$。 …</content></entry><entry><title>GDKOI2021 口胡</title><url>/post/GDKOI2021/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>题解</tag><tag>做题记录</tag><tag>图片挂了</tag></tags><content type="html"> 因为在广东集训，我们都要参加 GDKOI2023 来试手。
听说 GDKOI2021 是三天，每天 $4$ 小时 $4$ 题，省选难度，并且没有大样例。（p.s. GDKOI2022 未举办）而且评测机似乎还是 g++ 4.8.4。
然后由于是非正式选手，我们会在纪中机房打，用的机子会统一是只有 g++ 4.9.2 的 Windows 神秘机。不过听说评测环境会是 NOI Linux 2.0。
反正是，纪中教练（Update: 由 Alpha 从教练那边讨来的）给了我们 GDKOI2021 三天的题面，然后手上也没有可以自己交的地方（没有 gmoj
帐号，注册也没用），因此打算开始口胡！
题面下载链接
。
Day 1
A
给你一张 $n$ 个点 $m$ 条边的无向图，你要把点集分成两部分，使得两个点集之间的边的边数达到一半的总边数。数据保证有解。
保证无自环，重边按重数计。
$n\le10^5$，$m\le2\times10^5$。
考虑对点集增量。
每增加一个点，考虑其和已有的两个点集中谁的边数更少，加入那个点集即可。
复杂度 $O(n+m)$。
B
给定长为 $n$ 的序列 $a_1,a_2,\cdots,a_n$。
我们设 $f_{l,r}=(r-l+1)\min_{l\le k\le r}a_k\quad(1\le l\le r\le n)$，求出从小到大排名在 $L$ 到 $R$ 之间的各个 $f$ 值。
$1\le n\le3\times10^5$，$0\le a_i\le10^9$。
$1\le L\le R\le n(n+1)/2$，$R-L+1\le3\times10^5$。
这个，是不是，可以加进 XJCS，作为单调栈基础练习题啊！@devinwang
写个单调栈，建出笛卡尔树，我们就可以知道对于每个 $\min a$，其向左、向右扩展的距离。
然后我们考虑二分答案，对每个值 $w$ 查询有多少对 $l,r$ 满足 $f_{l,r}&amp;amp;lt;w$；答案显然不超过 $O(nv)$ 级别，因此只用 $O(\log(nv))$ 轮二分即可解出第 $L$ 大的数对应的权值，以及有多少数小于之。
然后我们考虑下一个数怎么求：我们先把相同的 $w$ 尽可能取空，这样我们下一个只用考虑 $&amp;amp;gt;w$ 的数。然后我们对每个 $\min a$ 开一个对应了元素的 …</content></entry><entry><title>USACO2023Feb 游记</title><url>/post/USACO2023Feb/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>题解</tag><tag>做题记录</tag></tags><content type="html"><![CDATA[  由于学校要求，过来打 USACO。
由于上次已经打到白金了，所以继续。
然后还是 AK 了。
感觉题意很迷惑，所以都翻译一下。
Hungry CowBessie 很饿，每天晚饭如果有干草就会吃 $1$ 份，没有就不吃，初始没有干草。
每天早上 Farmer John 会给它送若干干草，设第 $k$ 天送 $a_k$ 份干草，初始时 $a_k=0$，表示该天不送干草。
$q$ 次操作，每次给出 $x,y$，表示将 $a_x$ 改成 $y$，请将在此时 Bessie 有干草吃的日期编号求和并输出。对 $10^9+7$ 取模。
操作间互不独立。
$1\le q\le10^5$，$1\le x\le10^{14}$，$0\le y\le10^9$。
注意到这个过程是一个“前时间”对“后时间”的贡献，考虑兔队线段树。
维护区间内有干草吃的编号数 $cnt$、编号和 $ans$，以及对区间外的贡献 $more$。
单点修改，全局查询。
考虑计算左侧区间对当前节点带来 $c$ 的前缀贡献时，区间内三个值的值。
当填满左儿子空位时，就不用向左递归；否则，只用向左递归，右儿子结果和 $c=0$ 时的右儿子结果一致。
总复杂度 $O(q\log^2v)$。
核心代码：
1const ullt Mod=1e9+7,inv2=5e8+4; 2typedef ConstMod::mod_ullt&amp;lt;Mod&amp;gt;modint; 3typedef std::vector&amp;lt;modint&amp;gt;modvec; 4inline modint sum(ullt l,ullt r){return modint(r-l)*(l+r-1)*inv2;} 5struct Seg{ 6 Seg*L,*R;ullt id,len,cnt,more;modint ans; 7 Seg(ullt l,ullt r):L(NULL),R(NULL),id(l),len(r-l),cnt(0),more(0),ans(){} 8 voi chg(ullt p,ullt v){ 9 if(len==1){ 10 if(v)cnt=1,more=v-1,ans=id;else cnt=more=0,ans=0; 11 return; 12 } 13 if(p&amp;lt;(len&amp;gt;&amp;gt;1)){ 14 …  ]]></content></entry><entry><title>ABC268 VP记</title><url>/post/ABC268/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>题解</tag><tag>做题记录</tag></tags><content type="html"><![CDATA[  引言几天没比赛，手痒了，决定尝试 VP 一场 ABC，作为第一次 VP AT（
下次可能就不挑这么简单的场了（
VP 登顶留念。
比赛从 19:30 开始。我一路正开，也没啥罚时。
比赛题解A憨憨题。直接 sort + unique 即可。
1std::vector&lt;uint&gt;A(5); 2for(auto&amp;v:A)scanf(&#34;%u&#34;,&amp;v); 3std::sort(A.begin(),A.end()); 4printf(&#34;%d\n&#34;,(int)(std::unique(A.begin(),A.end())-A.begin())); B憨憨题。直接做即可。
1chr C1[205],C2[205]; 2scanf(&#34;%s%s&#34;,C1,C2); 3uint n=0; 4while(C1[n]){ 5 if(C1[n]!=C2[n])return puts(&#34;No&#34;),0; 6 n++; 7} 8puts(&#34;Yes&#34;); C憨憨题。随便计算一下差量即可。
1uint A[200005]; 2uint n;scanf(&#34;%u&#34;,&amp;n); 3for(uint i=0,v;i&lt;n;i++)scanf(&#34;%u&#34;,&amp;v) ,A[(i+n-v)%n]++; 4uint ans=0; 5for(uint i=0;i&lt;n;i++)_max(ans,A[i]+A[(i+1)%n]+A[(i+2)%n]); 6printf(&#34;%u\n&#34;,ans); D暴力 dfs 即可。
状态数可以预见不会很多。
细节有亿点多。
1typedef std::vector&lt;chr&gt;str; 2std::set&lt;str&gt;S;str C[32],now;chr User[32];uint n;bol Used[32]; 3voi dfs(uint p){ 4 if(now.size()&gt;16)return; 5 if(p==n){ 6 for(uint i=0;i&lt;n;i++)if(!Used[i]){ 7 now.insert(now.end(),C[i].begin(),C[i].end()); 8 if(now.size()&gt;=3&amp;&amp;now.size()&lt;=16&amp;&amp;!S.count(now)){ 9 for(auto s:now)putchar(s); 10 exit(0); 11 } 12 now.erase(now.end()-C[i].size(),now.end()); 13 } 14 return; 15 } 16 uint lim=18-now.size(); 17 for(uint i=0;i&lt;n;i++)if(!Used[i])lim-=C[i].size()+1; 18 for(uint i=0;i&lt;n;i++)if(!Used[i]){ 19 Used[i]=1,now.insert(now.end(),C[i].begin(),C[i].end()); 20 for(uint k=1;k&lt;=lim;k++) 21 { 22 for(uint t=1;t&lt;=k;t++)now.push_back(&#39;_&#39;); 23 dfs(p+1); 24 now.erase(now.end()-k,now.end()); 25 } 26 now.erase(now.end()-C[i].size(),now.end()),Used[i]=0; 27 } 28} 29int main() 30{ 31#ifdef MYEE 32 freopen(&#34;QAQ.in&#34;,&#34;r&#34;,stdin); 33 // freopen(&#34;QAQ.out&#34;,&#34;w&#34;,stdout); 34#endif 35 uint m;scanf(&#34;%u%u&#34;,&amp;n,&amp;m); 36 for(uint i=0;i&lt;n;i++){ 37 scanf(&#34;%s&#34;,User); 38 for(chr c:User)if(c)C[i].push_back(c);else break; 39 } 40 while(m--){ 41 scanf(&#34;%s&#34;,User); 42 for(chr c:User)if(c)now.push_back(c);else break; 43 S.insert(now),now.clear(); 44 } 45 dfs(1); 46 puts(&#34;-1&#34;); 47 return 0; 48} E还是考虑计算差量。
反向考虑对每种旋转方案的贡献，然后就是区间加一次函数。
直接用差分维护一下即可。
细节有亿点多。
1ullt A[200005],B[200005];uint n; 2voi add_base(ullt*A,uint l,uint r,ullt v){A[r]-=v,A[l]+=v;} 3voi add(uint l,uint r,ullt k,ullt b){add_base(A,l,r,k),add_base(B,l,r,b);} 4voi add_all(int l,int r,ullt k,ullt b){ 5 if(l&lt;0) 6 { 7 add(l+n,n,k,b-n*k),add(0,r,k,b); 8 return; 9 } 10 if(r&gt;(int)n){ 11 add(l,n,k,b),add(0,r-n,k,b+k*n); 12 return; 13 } 14 add(l,r,k,b); 15} 16int main() 17{ 18#ifdef MYEE 19 freopen(&#34;QAQ.in&#34;,&#34;r&#34;,stdin); 20 // freopen(&#34;QAQ.out&#34;,&#34;w&#34;,stdout); 21#endif 22 scanf(&#34;%u&#34;,&amp;n); 23 for(uint i=0,v;i&lt;n;i++){ 24 scanf(&#34;%u&#34;,&amp;v),v=(v+n-i)%n; 25 add_all(v-n/2,v,-1llu,v); 26 add_all(v,v+n-n/2,1llu,-(ullt)v); 27 } 28 for(uint i=0;i&lt;n;i++)A[i+1]+=A[i],B[i+1]+=B[i]; 29 ullt ans=-1; 30 for(uint i=0;i&lt;n;i++)_min(ans,A[i]*i+B[i]); 31 printf(&#34;%llu\n&#34;,ans); 32 return 0; 33} F国王游戏的经典调整法贪心。
1typedef std::pair&lt;ullt,ullt&gt;Pair; 2chr C[200005];Pair P[200005]; 3uint n;ullt ans=0;scanf(&#34;%u&#34;,&amp;n); 4for(uint i=0;i&lt;n;i++){ 5 scanf(&#34;%s&#34;,C); 6 for(chr c:C)if(c){ 7 if(c&lt;=&#39;9&#39;)ans+=P[i].first*(c-&#39;0&#39;),P[i].second+=c-&#39;0&#39;; 8 else P[i].first++; 9 }else break; 10} 11std::sort(P,P+n,[&amp;](Pair a,Pair b){ 12 return a.first*b.second&gt;a.second*b.first; 13}); 14ullt s=0; 15for(uint i=0;i&lt;n;i++)ans+=s*P[i].second,s+=P[i].first; 16printf(&#34;%llu\n&#34;,ans); G考虑对排名反向计算贡献。
对 $i$ 在 $j$ 前的概率，有以下几种状态：
$s_i$ 为 $s_j$ 前缀，则 $i$ 必然在 $j$ 前。 $s_j$ 为 $s_i$ 前缀，则 $i$ 必然在 $j$ 后。 其余情况，前后顺序等可能出现。 直接拿棵 Trie 计算一下每个串有几个前缀出现在全集中，及作为全集中多少串的前缀。
然后随便统计一下信息就完了。
1const ullt Mod=998244353; 2typedef ConstMod::mod_ullt&lt;Mod&gt;modint; 3struct node{node*son[26];uint v1,v2;}N[2000005],*rot=N,*cnt=N+1; 4node*NewNode(){return cnt++;} 5#define Id(p) ((uint)((p)-N)) 6#define Turn(c) ((c)-&#39;a&#39;) 7node*insert(chr*C){ 8 node*p=N; 9 while(*C){ 10 p-&gt;v1++;auto&amp;s=p-&gt;son[Turn(*(C++))]; 11 if(!s)s=NewNode(); 12 p=s; 13 } 14 p-&gt;v2++; 15 return p; 16} 17chr C[500005]; 18node*At[500005]; 19int main() 20{ 21#ifdef MYEE 22 freopen(&#34;QAQ.in&#34;,&#34;r&#34;,stdin); 23 // freopen(&#34;QAQ.out&#34;,&#34;w&#34;,stdout); 24#endif 25 uint n;scanf(&#34;%u&#34;,&amp;n); 26 for(uint i=0;i&lt;n;i++)scanf(&#34;%s&#34;,C),At[i]=insert(C); 27 for(node*p=rot;p!=cnt;p++)for(auto s:p-&gt;son)if(s)s-&gt;v2+=p-&gt;v2; 28 for(uint i=0;i&lt;n;i++){ 29 (modint(n-At[i]-&gt;v1+At[i]-&gt;v2)/2).println(); 30 } 31 return 0; 32} H考虑对文本串每个前缀，计算出其最短的存在于模板串中的后缀。
这个拿个 ACAM 即可搞定。
然后就是每个这样的区间都得删掉一个点，直接贪心 / 差分约束即可。
1const uint sigma=26; 2struct node{node*son[sigma],*fail;uint kill;node():kill(-1u){}}N[2000005],*rot=N,*cnt=N+1; 3node*NewNode(){return cnt++;} 4#define Id(p) ((uint)((p)-N)) 5#define Turn(c) ((c)-&#39;a&#39;) 6voi insert(chr*C){ 7 node*p=N;uint len=0; 8 while(*C){ 9 auto&amp;s=p-&gt;son[Turn(*(C++))]; 10 if(!s)s=NewNode(); 11 p=s,len++; 12 } 13 _min(p-&gt;kill,len); 14} 15voi build(){ 16 std::queue&lt;node*&gt;Q;rot-&gt;fail=rot; 17 for(uint i=0;i&lt;sigma;i++)(rot-&gt;son[i]?(Q.push(rot-&gt;son[i]),rot-&gt;son[i]-&gt;fail):rot-&gt;son[i])=rot; 18 while(!Q.empty()){ 19 node*p=Q.front();Q.pop(),_min(p-&gt;kill,p-&gt;fail-&gt;kill); 20 for(uint i=0;i&lt;sigma;i++) 21 (p-&gt;son[i]?(Q.push(p-&gt;son[i]),p-&gt;son[i]-&gt;fail):p-&gt;son[i])=p-&gt;fail-&gt;son[i]; 22 } 23} 24chr S[500005],C[500005]; 25int main() 26{ 27#ifdef MYEE 28 freopen(&#34;QAQ.in&#34;,&#34;r&#34;,stdin); 29 // freopen(&#34;QAQ.out&#34;,&#34;w&#34;,stdout); 30#endif 31 scanf(&#34;%s&#34;,S); 32 uint n;scanf(&#34;%u&#34;,&amp;n); 33 while(n--){ 34 scanf(&#34;%s&#34;,C); 35 insert(C); 36 } 37 build(); 38 uint ans=0,last=1e9; 39 node*p=rot; 40 for(auto c:S)if(c){ 41 last++,p=p-&gt;son[Turn(c)]; 42 if(last&gt;=p-&gt;kill) 43 last=0,ans++; 44 }else break; 45 printf(&#34;%u\n&#34;,ans); 46 return 0; 47}   ]]></content></entry><entry><title>USACO2023Jan 游记</title><url>/post/USACO2023Jan/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>题解</tag><tag>做题记录</tag></tags><content type="html"><![CDATA[  由于学校要求，过来打 USACO。
似乎要求起码升到白金？
由于是第一次打，只有从铜组开始了。
Brouze简单题，就给核心代码。
30min AK。
Leadershttp://usaco.org/current/index.php?page=viewproblem2&amp;cpid=12751chr C[100005];uint R[100005]; 2int main() 3{ 4#ifdef MYEE 5 freopen(&amp;#34;QAQ.in&amp;#34;,&amp;#34;r&amp;#34;,stdin); 6 // freopen(&amp;#34;QAQ.out&amp;#34;,&amp;#34;w&amp;#34;,stdout); 7#endif 8 uint n;scanf(&amp;#34;%u%s&amp;#34;,&amp;amp;n,C);for(uint i=0;i&amp;lt;n;i++)scanf(&amp;#34;%u&amp;#34;,R+i); 9 chr c=*C;uint p=0;while(C[p]==c)p++; 10 uint ans=0;for(uint i=0;i&amp;lt;p;i++)ans+=R[i]&amp;gt;p; 11 bol ok=R[0]==p;for(uint i=p;i&amp;lt;n;i++)ok&amp;amp;=C[i]!=c; 12 ans+=ok; 13 printf(&amp;#34;%u\n&amp;#34;,ans); 14 return 0; 15} Air Cownditioning IIhttp://usaco.org/current/index.php?page=viewproblem2&amp;cpid=12761uint L[25],R[25],C[25],A[25],B[25],P[25],M[25],Cnt[105]; 2int main() 3{ 4#ifdef MYEE 5 freopen(&amp;#34;QAQ.in&amp;#34;,&amp;#34;r&amp;#34;,stdin); 6 // freopen(&amp;#34;QAQ.out&amp;#34;,&amp;#34;w&amp;#34;,stdout); 7#endif 8 uint n,m;scanf(&amp;#34;%u%u&amp;#34;,&amp;amp;n,&amp;amp;m); 9 for(uint …  ]]></content></entry><entry><title>WC2023 游记</title><url>/post/WC2023/</url><categories><category>游记</category></categories><tags><tag>游记</tag><tag>图片挂了</tag></tags><content type="html"><![CDATA[  不是很会写游记，随便写写吧。
博客园内链导致大量图片挂了警告。
一些附件讲课资料合集（压缩后 $\rm 31MB$）太大了，可以去 U 群下载。
由于后面很多乐子，我把相关内容打包成 zip 上传上来了。
乐子合集下载链接。（这个包挺小方便下载）
前言：WC2022 测试怎么说呢，糟糕的回忆。
T2 我码了个压位 Trie 莫队，按理是应该过了的，但是我快写写挂了。
场上写法：
1inline voi write(uint v) 2{ 3	static chr c[18];uint cnt=0; 4 do c[cnt++]=v%10,v/=10;while(v); 5	while(cnt--)putchar(c[cnt]); 6	putchar(&amp;#39;\n&amp;#39;); 7} 正确写法：
1inline voi write(ullt v) 2{ 3	static chr c[18];uint cnt=0; 4 do c[cnt++]=v%10+&amp;#39;0&amp;#39;,v/=10;while(v); 5	while(cnt--)putchar(c[cnt]); 6	putchar(&amp;#39;\n&amp;#39;); 7} 于是直接挂没了。
T3 没加头文件，也爆蛋了。
总之就是，出场 $25+100+65$，实际 $10+0+0$。（众所周知 T1 部分分数据挂了）
但是我帮几个同学拿了 Ag。
以下开始 WC2023 正番。
前几天主要记录乐子，课件回头会发上来。
Day 0开幕式。分蛋糕。/se
乐子 dzd 没关麦/摄像头，被截图了。 图就不放上来了。
——孩子几岁了？ ——一岁半，两岁不到。
Day 1上午没啥意思，没听。
下午听了 hhz 的题目选讲，罚坐。
晚上员交，直接爆炸。
然后是一些乐子。
乐子 嗯，暴戾语言复现。
草，别让他们放PV了，把题目留着就行了。 警告一次，教室再出现不文明用语，全部踢出去，你们代表的是自己学校的形象。 PV 是咋样的呢？ CCF，以推动计算技术领域学术，技术，教育，应用和产业的发展，助力计算技术领域专业人士能力提升为使命，目前拥有超过10万名付费个人会员。 CCF，下设城市会员活动中心，学生分会，YOCSEF城市论坛，以及大数据，自然语言处理，和高性能计算等专业委员会。共近两百个会员服务机构，每年举办近千场专业活 …  ]]></content></entry><entry><title>CSP2022 游记</title><url>/post/CSP2022/</url><categories><category>游记</category></categories><tags><tag>游记</tag></tags><content type="html"><![CDATA[  我还是写一下吧……
Day -1模拟赛。
成为机房垫底人。
Day 0上午补昨天模拟赛 T4。
下午补昨天模拟赛 T4。
晚上补昨天模拟赛 T4。
补完了后把昨天胡了没写的 APIO2014 连珠线写了。挺有意思的反悔贪心树形 dp 技巧。
然后回家了。
Day 1上午因为只去提高组，所以在家里 VP 了 CSP-S2021 的 T1-3。
为了适应考场没有代码补全、语法高亮之类的东西，赶紧把插件关了写。（flag）
T1，T3 半小时写完，T2 花了大概 1h 就写掉了。
11:00 起身去文渊，好坐校车去考点。
遇到了好多同学。/se
下午12:30 校车出发。
大约 13:30 的样子抵达杭师大。
在里面面到了 djwj233。/se
devin 没来。/kel
14:00 左右进了机房。
那边的工作人员说话声好大啊。/yun
14:25 解压密码发下来，给的是 Belief2022，结果实际上是 belief2022？？？
我想，这实在是无法可想了。
开题。
先看 T1T2.
T1 大概先 bfs 一轮找到每个点距离那些点不超过 $k$？然后枚举似乎可以 meet in the middle？
T2 似乎随便分类讨论一下 rmq 就完了。
14:30 能开写了，先敲一个码头。以 T2 为例。（原来考场 VS Code 是有代码补全和语法高亮哒？）
1// with code highlight and code completion, I&amp;#39;d fly. 2 3#include &amp;lt;algorithm&amp;gt; 4#include &amp;lt;stdio.h&amp;gt; 5#include &amp;lt;vector&amp;gt; 6typedef unsigned uint; 7typedef unsigned long long ullt;typedef long long llt; 8typedef bool bol;typedef char chr;typedef void voi; 9typedef double dbl; 10template&amp;lt;typename T&amp;gt;bol _min(T&amp;amp;a,T b){return b&amp;lt;a?(a=b,true):false;} 11template&amp;lt;typename …  ]]></content></entry><entry><title>HDU 多校 2022 游记</title><url>/post/HDU2022/</url><categories><category>游记</category></categories><tags><tag>游记</tag></tags><content type="html"> 在 XJ 501 机房打。
队伍：
team1093 学军中学二队
为什么有二队而没有一队，这是一个问题。
Day 1
我们原来是打算九个人打。
因为今天隔壁机房的人搬迁过来，机房里充满了快活的气息。
因为隔壁机房的人加入进来，机房里感觉有十几个人在打。
感觉非常 exciting 啊！
由于 12:00 - 17:00 比赛，提前去吃饭了。
回来时已经是 11:50 了。
EricQian：myee，那你比赛先开中间的？
myee：好。
我开场就开 G 题（一共 $12$ 题），我超勇的！
我看到的
题
意简述：
给你一张图，每个点有颜色和权值，边有权值。
一个人能通过一条边当且仅当其实力不小于边权。
他可以从每种颜色的点中挑一个他可以从起点到达的点，获得其权值的贡献。
现在有两种操作。
其一，把某个点点权增加一个正值。
其二，查询某个实力的人从某起点出发所得的最大奖赏。
数据范围均为 $10^5$，时限 $4s$，多测（$5$ 组）
我一看到就知道是 Kruskal 重构树，很快啊！
用 Dfn 转化一下，就变成了单点点权加，区间查询颜色最大权之和。
然后想都不用想，肯定是根号做法啊对不对对不对?
&amp;amp;hellip;
代码写了 $9Kb$，包括 Kruskal 重构树、由乃救爷爷式 RMQ、根号分治、二维分块、$n^{\frac13}$ 叉树等等，复杂度 $O(n\sqrt{n\log n})$，成功贡献了 $13$ 发罚时，我觉得很下饭啊！
大家好啊，我是 $13$ 发罚时老哥 myee 啊，我来给大家直播下饭！
然后后来看到 sjy 过了这题，很快啊！
我打开一看：
我敲，这怎么这么搞的？？？
PolyLog 做法？？？没有设块长！！！
后来听神 SegmentTree 说，这题是虚树可以做的。
而且我还漏掉了一个重要条件——每种颜色最多出现 $10$ 次！（根号分治、${}^3!!\sqrt n$ 叉树白写了）
sjy 打的神仙单 log 做法依赖于此。
SegmentTree 说他有一个不依赖于此的 2log 做法，我觉得很厉害啊！
队伍总排名第二十。
大佬带我飞！
Time Problem ACer(Luogu ID) 12:03 K rwalxfhg 12:09 L rwalxfhg 12:15 C realMatrixCascade 12:58 B …</content></entry><entry><title>行列式入门</title><url>/post/what-is-det/</url><categories><category>学术</category></categories><tags><tag>学术</tag></tags><content type="html"><![CDATA[  前言其实是惊奇地发现班上居然有一堆人还不知道行列式是什么……
然后为了方便其查阅，我把一堆东西整一块了。
主要讲一下定义、性质啥的，顺带写几种手算求法以及相关定理。
参考资料《高等代数（第二版）上册》（丘维声著） 高代上册着重讲解线性代数，其中第二章讲述行列式。
定义我们记 $1\sim n$ 的一个排列为 $p_1p_2p_3\cdots p_n$。
我们记 $\sigma(p_1p_2p_3\cdots p_n)=\sum_{1\le i&amp;lt;j\le n}[p_i&amp;gt;p_j]$，即排列 $p_1p_2p_3\cdots p_n$ 的逆序对数。
对一个方阵 $A=(a_{ij})$，我们称 $|A|$ 或 $\det A$ 为其行列式，其值为：
$$|A|=\sum_{p_1p_2p_3\cdots p_n}(-1)^{\sigma(p_1p_2p_3\cdots p_n)}\prod_ia_{ip_i}$$
例如，矩阵 $\begin{bmatrix}1&amp;amp;2\newline 3&amp;amp;4\end{bmatrix}$ 的行列式记为 $\begin{vmatrix}1&amp;amp;2\newline 3&amp;amp;4\end{vmatrix}$，值为 $-2$。
这是定义式，也称完全展开式。
由于此矩阵是 $n\times n$ 的，即 $n$ 阶矩阵，所以此行列式被称为 $n$ 阶行列式，$n$ 称为此行列式的阶数。
似乎有的教材把按第一行展开作为定义。
性质以下不加证明地给出其七条性质。
具体证明可以使用完全展开式。
性质 $1$行列式行列互换，值不变。
写成公式即：
$$|A^T|=|A|$$
$A^T$ 表示矩阵 $A$ 的转置。
即，行列式的行、列地位相同。
以下仅写行，不作说明的话在列上也是对的。
性质 $2$把其中一行对应乘 $k$，行列式值乘上 $k$。
性质 $3$交换两行，行列式反号。
性质 $4$把一行的 $k$ 倍对应加到另一行上，行列式不变。
以上三条（$2,3,4$）导出了计算行列式的一种基本方法，即初等行变换转成上对角阵。
这三条依次对应于三类初等行变换。
性质 $5$两行对应相等，行列式值为 $0$。
性质 $6$两行对应成比例，行列式值为 $0$。
性质 $7$若把一个行列式的一行拆成两行的和，则原 …  ]]></content></entry></search>